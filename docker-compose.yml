services:
  identity_server:
    container_name: identity_server
    build: ./Backend/AspNetCoreGroup.UserFunctionality.IdentityServer
    ports:
      - 5000:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    volumes:
      - ./Backend/AspNetCoreGroup.UserFunctionality.IdentityServer:/src/app

  backend:
    container_name: backend
    build: ./Backend
    ports:
      - 5002:80
    depends_on:
      - rabbitmq  
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - 5001:3000
  
  proxy:
    image: nginx:latest
    volumes:
      - ./nginx/:/etc/nginx/
    ports:
      - 80:80

  backend-db:
    image: postgres:alpine
    container_name: backend_db
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: "ProjectBackendService"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "1234"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ProjectBackendService"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.10.7-management
    container_name: rabbitmq
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    ports:
      - 15672:15672
      - 15691:15691
      - 15692:15692
      - 2567:2567
      - 4369:4369
      - 5671:5671
      - 5672:5672